@using TobyBlazor.Data
@using TobyBlazor.Models
@using System.Net

@inject IJSRuntime jsRuntime

<div class="modal fade modal-tall" id="ytModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog mw-100" role="document" style="width: 100% !important;">
        <div class="modal-content">
            <div class="modal-header">
                @if (String.IsNullOrEmpty(SelectedVideo.Group) || SelectedVideo.Group == "Recently Played" || SelectedVideo.Group == "Favorites")
                {
                    <div style="margin-right: 25px;" class="btn-group-toggle" data-toggle="buttons" @onclick=@OnAddToFavoritesButtonToggle>
                        <label class="btn btn-secondary @(AddedToFavorites ? "active": "")">
                            @if (AddedToFavorites)
                            {
                                <Icon Path="css/bootstrap/icons/star-fill.svg" Title="Favorite" Invert=true />
                            }
                            else
                            {
                                <Icon Path="css/bootstrap/icons/star.svg" Title="Unfavorite" Invert=true />
                            }
                        </label>
                    </div>
                }
                <div>
                    <h5 class="modal-title">@WebUtility.HtmlDecode(@SelectedVideo.Title)</h5>
                </div>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick=@OnModalCloseClicked>
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                <YouTube VideoId=@SelectedVideo.YTId />
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Video SelectedVideo { get; set; }

    [Parameter]
    public EventCallback OnPopupClosed { get; set; }

    private readonly IVideoRepository videos = new VideoRepository();

    private bool AddedToFavorites = false;

    protected override void OnInitialized()
    {
        AddedToFavorites = IsAddedToFavorites(SelectedVideo);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await OpenModal();
        }
    }

    public bool IsAddedToFavorites(Video video)
    {
        var found = videos.FindByYTId(video.YTId, "Favorites");

        if (found == null || found.Group != "Favorites")
        {
            return false;
        }

        return true;
    }

    public async void OnModalCloseClicked()
    {
        await jsRuntime.InvokeVoidAsync("closeModal", "ytModal");
        await OnPopupClosed.InvokeAsync(EventCallback.Empty);
    }

    private async Task OpenModal()
    {
        await jsRuntime.InvokeVoidAsync("openModal", "ytModal");
    }

    public void OnAddToFavoritesButtonToggle()
    {
        if (!AddedToFavorites)
        {
            AddedToFavorites = true;
            videos.Add(SelectedVideo, "Favorites");
        }
        else
        {
            AddedToFavorites = false;
            videos.Delete(SelectedVideo.YTId, "Favorites");
        }
    }
}
