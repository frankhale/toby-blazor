@using TobyBlazor.Models
@using TobyBlazor.Other

@if (Pages.Count > 0)
{
    if (Pages.Count > 1)
    {
        <nav aria-label="Video page navigation">
            <ul class="pagination justify-content-center">
                <li class="page-item @(PreviousButtonDisabled ? "disabled" : "")">
                    <button class="page-link" aria-label="Previous" @onclick=@OnPreviousButtonClick>
                        <span aria-hidden="true">&laquo;</span>
                    </button>
                </li>

                @foreach (var i in PageIndices[CurrentPageLinkPage - 1])
                {
                    <li class="page-item @(CurrentPage == i ? "active" : "")">
                        <button class="page-link" @onclick=@(eventArgs => OnPageButtonClick(i))>
                            @i
                        </button>
                    </li>
                }

                <li class="page-item @(NextButtonDisabled ? "disabled" : "")">
                    <button class="page-link" aria-label="Next" @onclick=@OnNextButtonClick>
                        <span aria-hidden="true">&raquo;</span>
                    </button>
                </li>
            </ul>
        </nav>
    }

    <div>
        @Content(Pages[CurrentPage - 1])
    </div>
}
else
{
    if (!String.IsNullOrEmpty(Message))
    {
        <Notification Message=@Message NotificationType="alert-warning" OnClose=@OnNotificationClose />
    }
}

@code {
    [Parameter]
    public List<Video> Videos { get; set; }

    [Parameter]
    public RenderFragment<List<Video>> Content { get; set; }

    private const int ChunkSize = 10;
    private List<List<Video>> Pages { get; set; }
    private List<List<int>> PageIndices { get; set; }
    private int CurrentPage { get; set; } = 1;
    private int CurrentPageLinkPage { get; set; } = 1;
    private string Message { get; set; } = String.Empty;
    private bool PreviousButtonDisabled { get; set; } = false;
    private bool NextButtonDisabled { get; set; } = false;

    protected override void OnParametersSet()
    {
        InitializePages(true);
    }

    private void InitializePages(bool resetCurrentPage = false)
    {
        if (resetCurrentPage)
        {
            CurrentPage = 1;
            CurrentPageLinkPage = 1;
        }

        Pages = Videos.ChunkBy(ChunkSize);
        PageIndices = Enumerable.Range(1, Pages.Count).ToList().ChunkBy(ChunkSize);

        if (PageIndices.Count <= 0)
        {
            Message = "There are no results";
        }

        TogglePrevNextButtonsDisabled();

        //Console.WriteLine("Total Videos = {0}", Videos.Count);
        //Console.WriteLine("Total Pages = {0}", Pages.Count);
        //Console.WriteLine("Total Page Indicies = {0}", PageIndices.Count);
        //Console.WriteLine("Total Link Pages = {0}", Pages.Count / ChunkSize);
        //Console.WriteLine("Total Links Left Over = {0}", Pages.Count % ChunkSize);
    }

    private void TogglePrevNextButtonsDisabled()
    {
        PreviousButtonDisabled = CurrentPageLinkPage != 1 ? false : true;
        NextButtonDisabled = CurrentPageLinkPage < PageIndices.Count ? false : true;
    }

    private void OnPageButtonClick(int page)
    {
        CurrentPage = page;
    }

    private void OnPreviousButtonClick()
    {
        if (CurrentPageLinkPage > 1)
        {
            CurrentPageLinkPage -= 1;
        }

        TogglePrevNextButtonsDisabled();
    }

    private void OnNextButtonClick()
    {
        if (CurrentPageLinkPage < PageIndices.Count)
        {
            CurrentPageLinkPage += 1;
        }

        TogglePrevNextButtonsDisabled();
    }

    public void OnNotificationClose()
    {
        Message = String.Empty;
    }
}
