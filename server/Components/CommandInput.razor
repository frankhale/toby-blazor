@namespace TobyBlazor.Components

@using TobyBlazor.Data
@using TobyBlazor.Models

@inject IJSRuntime jsRuntime

<div class="input-group mb-3">
    <div class="input-group-prepend">
        <span class="input-group-text">
            <img src="css/bootstrap/icons/search.svg" width="16" height="16" title="Search" style="filter: invert(100%);">
        </span>
    </div>
    <input class="form-control mw-100 w-100" type="search" placeholder="Search" aria-label="Search"
           @bind=@SearchTerm
           @onkeyup=@(eventArgs => OnKeyPress(eventArgs.Key)) />
</div>

@code {
    private readonly IVideoRepository videos = new VideoRepository();

    private string SearchTerm { get; set; } = "";

    [Parameter]
    public EventCallback<SearchResult> OnSearch { get; set; }

    private async void OnKeyPress(string key)
    {
        if (key == "Enter" && !String.IsNullOrEmpty(SearchTerm))
        {
            var result = new SearchResult();

            // This needs changing!!!
            if (SearchTerm.StartsWith("/manage") || SearchTerm.StartsWith("/mg"))
            {
                result.Manage = true;
                result.Videos = videos.AllVideos();
            }
            else if (SearchTerm.StartsWith("/crp") || SearchTerm.StartsWith("/clear-recently-played"))
            {
                videos.DeleteRangeByGroup("Recently Played");
                // This is just dumb
                // We need a way to report back what happened so we can display
                // a notification
                result.Videos = new List<Video>();
            }
            else
            {
                result.Manage = false;
                result.Videos = await videos.Search(SearchTerm);
            }

            await OnSearch.InvokeAsync(result);
        }
    }
}
