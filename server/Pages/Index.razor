@page "/"

@using TobyBlazor.Models
@using TobyBlazor.Data

@inject IJSRuntime jsRuntime


<CommandInput OnSearch=@OnSearchResults />

@if (Result.Type == SearchResultType.Manage)
{
    <VideoManagement />
}
else if (Result.Type == SearchResultType.Search)
{
    <VideoList Videos=@Result.Videos />
}

@if (Result.Message != null && !String.IsNullOrEmpty(Result.Message.Value))
{
    <Notification Message=@Result.Message.Value NotificationType=@Result.Message.Type OnClose=@OnNotificationClose />
}

@code {
    private readonly IVideoRepository videos = new VideoRepository();

    private SearchResult Result { get; set; } = new SearchResult();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await jsRuntime.InvokeVoidAsync("setModalCloseStopVideo", "ytModal");
        }
    }

    public void OnSearchResults(SearchResult result)
    {
        Result = result;
    }

    public void OnNotificationClose()
    {
        if (Result != null)
        {
            Result = new SearchResult();
        }
    }
}
